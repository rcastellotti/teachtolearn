version: "3"

services:
  minio:
    image: minio/minio:latest
    container_name: teachtolearn-minio-dev
    network_mode: "host"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: miniorootpassword
    restart: always

  mc:
    image: minio/mc:latest
    network_mode: "host"
    depends_on:
    - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set s3 http://localhost:9000 root miniorootpassword --api S3v4
      && mc mb s3/ttl-dev
      && mc policy set download s3/ttl-dev"
 
  database:
    image: postgres:14.0-alpine
    container_name: teachtolearn-database-dev
    network_mode: "host"
    environment:
      POSTGRES_DB: "ttl"
      POSTGRES_USER: "teachtolearn"
      POSTGRES_PASSWORD: "postgresqlpassword"

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: teachtolearn-backend-dev
    network_mode: "host"
    command: >
      bash -c "flask createdb
      && flask run --host=0.0.0.0"
    env_file:
      - backend/.env
    depends_on:
      - database
    restart: always

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: teachtolearn-frontend-dev
    network_mode: "host"
    command: "node --inspect --trace-warnings build"
    depends_on:
      - backend
    restart: always
